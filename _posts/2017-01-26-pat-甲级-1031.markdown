---
layout: post
title:  "Pat 甲级 训练真题集 1031!"
tags: PAT-A
---
# 1031. Hello World for U (20)

Given any string of N (>=5) characters, you are asked to form the characters into the shape of U.  For example, "helloworld" can be printed as:

```
h  d
e  l
l  r
lowo

```

That is, the characters must be printed in the original order, starting top-down from the left vertical line with n1 characters, then left to right along the bottom line with n2 characters, and finally bottom-up along the vertical line with n3 characters.  And more, we would like U to be as squared as possible -- that is, it must be satisfied that n1 = n3 = max { k| k <= n2 for all 3 <= n2 <= N } with n1 + n2 + n3 - 2 = N.



**Input Specification:**

Each input file contains one test case.  Each case contains one string with no less than 5 and no more than 80 characters in a line.  The string contains no white space.

**Output Specification:**

For each test case, print the input string in the shape of U as specified in the description.

Sample Input:

```
helloworld!

```

Sample Output:

```
h   !
e   d
l   l
lowor
```

代码如下：

```c++
#include<iostream>
#include<string>

using namespace std;

int main(){
	string s;
	cin>>s;
	int n=s.size()+2;
	int n2;
	if(s.size()<5){
		return 0;
	}
	if(n%3!=0){
		n2=n;
		while(n2%3!=0){
			--n2;
		}
		int index=0;
		
		for(int i=0,j=s.size()-1;i<n2/3-1;++i,--j){
			cout<<s[i];
			for(int q=1;q<=n-(n2/3)*2-2;++q){			
				cout<<" ";			
			}
			cout<<s[j]<<endl;
			++index;
			
		}
		int flag=s.size()-(index)*2;
		while(flag)	{	
			cout<<s[index++];
			--flag;
		}
		
	}else{
		for(int i=0,j=s.size()-1;i<n/3-1;++i,--j){
			cout<<s[i];
			for(int q=1;q<=(n/3-2);++q){			
				cout<<" ";			
			}
			cout<<s[j]<<endl;
		}
		for(int i=n/3-1;i<=(n/3-1)*2;++i){
			cout<<s[i];
		}
	}
	return 0;
}
```


