---
layout: post
title:  "Pat 甲级 训练真题集 1051!"

---
# 1051. Pop Sequence (25)

​    时间限制  

​    100 ms

​    内存限制  

​    65536 kB

​    代码长度限制  

​    16000 B

​      判题程序    

​      Standard    

​      作者    

​      CHEN, Yue

Given a stack which can keep M numbers at most.  Push N numbers in the order of 1, 2, 3, ..., N and pop randomly.  You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack.  For example, if M is 5 and N is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4.

**Input Specification:**

Each input file contains one test case.  For each case, the first line contains 3 numbers (all no more than 1000): M (the maximum capacity of the stack), N (the length of push sequence), and K (the number of pop sequences to be checked).  Then K lines follow, each contains a pop sequence of N numbers.  All the numbers in a line are separated by a space.

**Output Specification:**

For each pop sequence, print in one line "YES" if it is indeed a possible pop sequence of the stack, or "NO" if not.

Sample Input:

```
5 7 5
1 2 3 4 5 6 7
3 2 1 7 5 6 4
7 6 5 4 3 2 1
5 6 4 3 7 2 1
1 7 6 5 4 3 2

```

Sample Output:

```
YES
NO
NO
YES
NO
```

怎么玩。。玩了这么多天突然变得这么笨

参考网页[1051. Pop Sequence (25)-PAT甲级真题（栈模拟）](http://www.liuchuo.net/archives/2232)

```c++
#include<iostream>
#include<stack>
#include<vector>

using namespace std;

int main(){
	int m,n,q;
	scanf("%d%d%d",&m,&n,&q);
	for(int i=0;i<q;++i){
		stack<int> s;
		vector<int> v(n+1);
		for(int j=1;j<=n;++j){
			scanf("%d",&v[j]);
		}
		int flag=0;
		int current=1;
		for(int j=1;j<=n;++j){
			s.push(j);
			if(s.size()>m) break;
			while(!s.empty()&&s.top()==v[current]){
				s.pop();
				++current;
			}
		}
		if(current==n+1){
			flag=1;
		}
		if(flag==1){
			printf("YES\n");
		}else{
			printf("NO\n");
		}
	}
	return 0;

}
```