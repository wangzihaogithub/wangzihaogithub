---
layout: post
title:  "Pat 甲级 训练真题集 1063!"

---
# 1063. Set Similarity (25)

​    时间限制  

​    300 ms

​    内存限制  

​    65536 kB

​    代码长度限制  

​    16000 B

​      判题程序    

​      Standard    

​      作者    

​      CHEN, Yue

Given two sets of integers, the similarity of the sets is defined to be Nc/Nt*100%, where Nc is the number of distinct common numbers shared by the two sets, and Nt is the total number of distinct numbers in the two sets.  Your job is to calculate the similarity of any given pair of sets.

**Input Specification:**

Each input file contains one test case.  Each case first gives a positive integer N (<=50) which is the total number of sets.  Then N lines follow, each gives a set with a positive M (<=104) and followed by M integers in the range [0, 109].  After the input of sets, a positive integer K (<=2000) is given, followed by K lines of queries.  Each query gives a pair of set numbers (the sets are numbered from 1 to N).  All the numbers in a line are separated by a space.

**Output Specification:**

For each query, print in one line the similarity of the sets, in the percentage form accurate up to 1 decimal place.

Sample Input:

```
3
3 99 87 101
4 87 101 5 87
7 99 101 18 5 135 18 99
2
1 2
1 3

```

Sample Output:

```
50.0%
33.3%
```

此题为set的应用，在确定合并set的大小用两个总大小的减去共有的即可

结果为（共有个数/两个总大小的减去共有的个数）

代码如下：

```c++
#include<iostream>
#include<set>
using namespace std;
int main(){
	int n,m,k;
	scanf("%d",&n);
	long val;
	set<long>s[51];
	for(int i=1;i<=n;++i){
		scanf("%d",&m);
		for(int j=0;j<m;++j){
			scanf("%ld",&val);
			s[i].insert(val);
		}
	}
	scanf("%d",&k);
	int a,b;
	for(int i=0;i<k;++i){
		scanf("%d%d",&a,&b);
		int cnt=0;
		if(s[a].size()<s[b].size()){
			for(auto j=s[a].begin();j!=s[a].end();++j){
				if(s[b].find(*j)!=s[b].end()){
					++cnt;
				}
			}
		}else{
			for(auto j=s[b].begin();j!=s[b].end();++j){
				if(s[a].find(*j)!=s[a].end()){
					++cnt;
				}
			}
		}
		int size=s[a].size()+s[b].size()-cnt;
		printf("%0.1f%%\n",((float)cnt/size)*100);
	}
	return 0;
}
```
