---
layout: post
title:  "Pat 甲级 训练真题集 1083!"

---
# 1083. List Grades (25)

​    时间限制  

​    400 ms

​    内存限制  

​    65536 kB

​    代码长度限制  

​    16000 B

​      判题程序    

​      Standard    

​      作者    

​      CHEN, Yue

Given a list of N student records with name, ID and grade.  You are supposed to sort the records with respect to the grade in non-increasing order, and output those student records of which the grades are in a given interval.

**Input Specification:**

Each input file contains one test case.  Each case is given in the following format:

```
N
name[1] ID[1] grade[1]
name[2] ID[2] grade[2]
... ...
name[N] ID[N] grade[N]
grade1 grade2

```

where name[i] and ID[i] are strings of no more than 10 characters with no space, grade[i] is an integer in [0, 100], grade1 and grade2 are the boundaries of the grade's interval.  It is guaranteed that all the grades are *distinct*.

**Output Specification:**

For each test case you should output the student records of which the grades are in the given interval [grade1, grade2] and are in non-increasing order.  Each student record occupies a line with the student's name and ID, separated by one space.  If there is no student's grade in that interval, output "NONE" instead.

Sample Input 1:

```
4
Tom CS000001 59
Joe Math990112 89
Mike CS991301 100
Mary EE990830 95
60 100

```

Sample Output 1:

```
Mike CS991301
Mary EE990830
Joe Math990112

```

Sample Input 2:

```
2
Jean AA980920 60
Ann CS01 80
90 95

```

Sample Output 2:

```
NONE
```

此题就是简单的排序，没什么太多的知识点

代码如下：

```c++
#include<iostream>
#include<string>
#include<vector>
#include<algorithm>

using namespace std;

class Stu{
public:
	string name;
	string ID;
	int grade;
};
int cmp (const Stu &s,const Stu &s1){
		return s.grade>s1.grade;
}
int main(){
	int n;
	scanf("%d",&n);
	vector<Stu>v;
	for(int i=0;i<n;++i){
		string name,id;int grade;
		cin>>name>>id>>grade;
		Stu s;
		s.name=name;s.ID=id;s.grade=grade;
		v.push_back(s);
	}
	int first,end;
	scanf("%d%d",&first,&end);
	sort(v.begin(),v.end(),cmp);
	int flag=0;
	for(int i=0;i<v.size();++i){
		if(v[i].grade>=first&&v[i].grade<=end){
			flag=1;
			cout<<v[i].name<<" "<<v[i].ID<<endl;
		}
	}
	if(flag==0){
		printf("NONE");
	}
	return 0;
}
```

